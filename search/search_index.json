{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the More Peripherals Documentation More Peripherals is a Minecraft Java Edition Mod, that increments in the funcionality of CC:Tweaked , adding the following new Peripherals: Anvil Interface Beehive Interface Enchanting Interface Grinder Grindstone Interface Loom Interface Spawner Interface Trading Interface XP Bottler XP Collector","title":"Home"},{"location":"#welcome-to-the-more-peripherals-documentation","text":"More Peripherals is a Minecraft Java Edition Mod, that increments in the funcionality of CC:Tweaked , adding the following new Peripherals: Anvil Interface Beehive Interface Enchanting Interface Grinder Grindstone Interface Loom Interface Spawner Interface Trading Interface XP Bottler XP Collector","title":"Welcome to the More Peripherals Documentation"},{"location":"items/mob_data_card/","text":"Mob Data Card Saves a mob id in it, by hitting a mob there is a 10% change of its data being set.","title":"Mob Data Card"},{"location":"items/mob_data_card/#mob-data-card","text":"Saves a mob id in it, by hitting a mob there is a 10% change of its data being set.","title":"Mob Data Card"},{"location":"peripherals/anvil_interface/","text":"Anvil Interface Permits the combining and renaming of items using any computer or turtle The Anvil Interface needs an anvil in any of the sides of it to work. Methods Description combine(from:string,fromSlot:number,resources:string,resourceSlot:number,xpSource:string) Combines two items, one from the first input, and other from the resources input, using 8 bottles of enchanting from the xpSource inventory rename(from:string,slot:number,name:string) Renames an item with the name given","title":"Anvil Interface"},{"location":"peripherals/anvil_interface/#anvil-interface","text":"Permits the combining and renaming of items using any computer or turtle The Anvil Interface needs an anvil in any of the sides of it to work. Methods Description combine(from:string,fromSlot:number,resources:string,resourceSlot:number,xpSource:string) Combines two items, one from the first input, and other from the resources input, using 8 bottles of enchanting from the xpSource inventory rename(from:string,slot:number,name:string) Renames an item with the name given","title":"Anvil Interface"},{"location":"peripherals/beehive_interface/","text":"Beehive Interface Permits retriving information about beehives, and also colleting either the honey comb, or honey bottles using any computer or turtle The Beehive Interface needs an Beehive or Nest in any of the sides of it to work. Methods Description hasBees() Returns a boolean determining if the hive has bees or not getBeeCount() Returns how many bees are inside the hive gotFireNear() Returns a boolean determining the presence of a fire close to the hive getBees() Returns a table with the information about each present bee getHoneyLevel() Returns an number representing the honey level of the hive collectHoney(resources:string, output:string, bottled:boolean) The resources is a inventory that contains a shear or glass bottles, output is the inventory of the collected resources, and the bottled flag represents if it needs to use the shears or the bottles for the resource collecting","title":"Beehive Interface"},{"location":"peripherals/beehive_interface/#beehive-interface","text":"Permits retriving information about beehives, and also colleting either the honey comb, or honey bottles using any computer or turtle The Beehive Interface needs an Beehive or Nest in any of the sides of it to work. Methods Description hasBees() Returns a boolean determining if the hive has bees or not getBeeCount() Returns how many bees are inside the hive gotFireNear() Returns a boolean determining the presence of a fire close to the hive getBees() Returns a table with the information about each present bee getHoneyLevel() Returns an number representing the honey level of the hive collectHoney(resources:string, output:string, bottled:boolean) The resources is a inventory that contains a shear or glass bottles, output is the inventory of the collected resources, and the bottled flag represents if it needs to use the shears or the bottles for the resource collecting","title":"Beehive Interface"},{"location":"peripherals/disk_raid/","text":"Disk Raid The disk raid is a way to mount 5 to 10 disk drives on a single block The normal one has 5 disk slots The advanced one has 10 disk slots Methods Description isDiskPresent(slot: number) Returns a boolean representing if there is a disk in that slot getDiskLabel(slot: number) Returns the disk label setDiskLabel(slot: number, [label:String]) Sets the disk label to a custom one or the default in the specified slot hasData(slot: number) Returns a boolean if there is data in the disk on the specificed slot getMountPath(slot: number) Returns the mount path for the disk on the specificed slot ejectDisk(slot: number) Unmouns and drops a disk located on the slot getDiskID(slot: number) Return the disk id of the selected slot","title":"Disk Raids"},{"location":"peripherals/disk_raid/#disk-raid","text":"The disk raid is a way to mount 5 to 10 disk drives on a single block The normal one has 5 disk slots The advanced one has 10 disk slots Methods Description isDiskPresent(slot: number) Returns a boolean representing if there is a disk in that slot getDiskLabel(slot: number) Returns the disk label setDiskLabel(slot: number, [label:String]) Sets the disk label to a custom one or the default in the specified slot hasData(slot: number) Returns a boolean if there is data in the disk on the specificed slot getMountPath(slot: number) Returns the mount path for the disk on the specificed slot ejectDisk(slot: number) Unmouns and drops a disk located on the slot getDiskID(slot: number) Return the disk id of the selected slot","title":"Disk Raid"},{"location":"peripherals/enchanting_interface/","text":"Enchanting Interface Permits item enchanting using XP Bottles and Lapis Lazuli, the enchantments created from it are random. The Enchanting Interface needs an Enchanting Table in any of the sides of it to work. Methods Description getsEnchantFor(input:string, slot:number) By passing the name of the input inventory and a slot with a enchantable item, gets the enchants for the item enchant(input:string, slot:number, resources:string) By passing the name of the input inventory, a slot with a enchantable item and a resources input inventory, enchants the passing item, and consumes 1 Lapis Lazuli and 8 Bottles of Enchanting from the resources inventory","title":"Enchanting Interface"},{"location":"peripherals/enchanting_interface/#enchanting-interface","text":"Permits item enchanting using XP Bottles and Lapis Lazuli, the enchantments created from it are random. The Enchanting Interface needs an Enchanting Table in any of the sides of it to work. Methods Description getsEnchantFor(input:string, slot:number) By passing the name of the input inventory and a slot with a enchantable item, gets the enchants for the item enchant(input:string, slot:number, resources:string) By passing the name of the input inventory, a slot with a enchantable item and a resources input inventory, enchants the passing item, and consumes 1 Lapis Lazuli and 8 Bottles of Enchanting from the resources inventory","title":"Enchanting Interface"},{"location":"peripherals/grinder/","text":"Grinder A mob grinder that can utilize any sword, and applies its effects like Fire Aspect or Sharpness Hitting on a 3x3 Area Around it. Methods Description attack() Attack any living mob around it (apply sword enchantments) hasSword() Returns a boolean if the grinder has a sword in it pushSword(from:string, slot:number) By passing a input inventory name and slot, if it is a sword it will be equiped in the grinder pullSword(to:string) By passing a output inventory name removes the sword from the Grinder","title":"Grinder"},{"location":"peripherals/grinder/#grinder","text":"A mob grinder that can utilize any sword, and applies its effects like Fire Aspect or Sharpness Hitting on a 3x3 Area Around it. Methods Description attack() Attack any living mob around it (apply sword enchantments) hasSword() Returns a boolean if the grinder has a sword in it pushSword(from:string, slot:number) By passing a input inventory name and slot, if it is a sword it will be equiped in the grinder pullSword(to:string) By passing a output inventory name removes the sword from the Grinder","title":"Grinder"},{"location":"peripherals/grindstone_interface/","text":"Grindstone Interface Interacts with the grindstone, permiting item repair, and desenchanting, needs a Grindstone in any block face to work Methods Descriptions combine(from:string,fromSlot:number,resources:string,resourceSlot:number) Combines two items, repair them, and remove the enchants if any are present disenchant(from:string,slot:int,[collector:string]) disenchants an item, and puts the xp in the XP collector if it is present","title":"Grindstone Interface"},{"location":"peripherals/grindstone_interface/#grindstone-interface","text":"Interacts with the grindstone, permiting item repair, and desenchanting, needs a Grindstone in any block face to work Methods Descriptions combine(from:string,fromSlot:number,resources:string,resourceSlot:number) Combines two items, repair them, and remove the enchants if any are present disenchant(from:string,slot:int,[collector:string]) disenchants an item, and puts the xp in the XP collector if it is present","title":"Grindstone Interface"},{"location":"peripherals/loom_interface/","text":"Loom Interface Interacts with the loom, permiting banner creation, and cleaning, needs a Loom in any block face to work Methods Description paintBanner(input:string, slotBanner:number, slotDye:number, pattern:number) By passing the name of the input invetory, the slot position of the banner, the slot position of the dye, and a number for the pattern, adds a the pattern with the color to the banner (also dye consumption scales for the quantity stacked banners) resetBanner(input:string, slot:number) By passing the name of the input invetory and the slot position of the banner, resets all the patterns in the banner","title":"Loom Interface"},{"location":"peripherals/loom_interface/#loom-interface","text":"Interacts with the loom, permiting banner creation, and cleaning, needs a Loom in any block face to work Methods Description paintBanner(input:string, slotBanner:number, slotDye:number, pattern:number) By passing the name of the input invetory, the slot position of the banner, the slot position of the dye, and a number for the pattern, adds a the pattern with the color to the banner (also dye consumption scales for the quantity stacked banners) resetBanner(input:string, slot:number) By passing the name of the input invetory and the slot position of the banner, resets all the patterns in the banner","title":"Loom Interface"},{"location":"peripherals/spawner_interface/","text":"Spawner Interface Can manipulate spawners, like setting new mobs to spawn, and getting the spawner to drop itself Methods Description changeSpawner(inv:string, slot:integer) Using a Mob Data Card, changes the mob that spawns getCurrentlySpawningMob() Get the spawning entity id captureSpawner(inv:string, slot:integer) Using a Mob Data Card (empty or full), saves the spawning mob, and drops a default spawner (pig)","title":"Spawner Interface"},{"location":"peripherals/spawner_interface/#spawner-interface","text":"Can manipulate spawners, like setting new mobs to spawn, and getting the spawner to drop itself Methods Description changeSpawner(inv:string, slot:integer) Using a Mob Data Card, changes the mob that spawns getCurrentlySpawningMob() Get the spawning entity id captureSpawner(inv:string, slot:integer) Using a Mob Data Card (empty or full), saves the spawning mob, and drops a default spawner (pig)","title":"Spawner Interface"},{"location":"peripherals/trading_interface/","text":"Trading Interface Interacts with one villager, permiting the automation of trade, and force restocking of said villager, works with modded villagers too, if they use the same system as vanilla. Methods Descriptions getProfession() Returns the current profession of the villager getTrades() Returns all the trades of the villager trade(input:string, output:string, tradeId:number) By passing the name of the inventory peripherals in the input and output, and passing a trade index, a trade is made (does not level up villgers, do not drop xp, ingores price raise or drop) restock() Forces a villager trade restock","title":"Trading Interface"},{"location":"peripherals/trading_interface/#trading-interface","text":"Interacts with one villager, permiting the automation of trade, and force restocking of said villager, works with modded villagers too, if they use the same system as vanilla. Methods Descriptions getProfession() Returns the current profession of the villager getTrades() Returns all the trades of the villager trade(input:string, output:string, tradeId:number) By passing the name of the inventory peripherals in the input and output, and passing a trade index, a trade is made (does not level up villgers, do not drop xp, ingores price raise or drop) restock() Forces a villager trade restock","title":"Trading Interface"},{"location":"peripherals/xp_bottler/","text":"XP Bottler Using the XP stored in the XP Collector , can make bottles o' enchanting Methods Descriptions bottleXP(input:string, output:string, xp_collector:string) By passing the names of the input and output inventories, and the name of the xp collector, creates a Bottle of Enchanting, consuming a Glass bottle from the input and 8 xp points of the collector.","title":"XP Bottler"},{"location":"peripherals/xp_bottler/#xp-bottler","text":"Using the XP stored in the XP Collector , can make bottles o' enchanting Methods Descriptions bottleXP(input:string, output:string, xp_collector:string) By passing the names of the input and output inventories, and the name of the xp collector, creates a Bottle of Enchanting, consuming a Glass bottle from the input and 8 xp points of the collector.","title":"XP Bottler"},{"location":"peripherals/xp_collector/","text":"XP Collector Collects XP orbs in a 3x3 area around it, also store player levels by right clicking the block Methods Description getCurrentXP() Returns an integer number that represents the stored xp points dumpXP() Dump all the stored xp","title":"XP Collector"},{"location":"peripherals/xp_collector/#xp-collector","text":"Collects XP orbs in a 3x3 area around it, also store player levels by right clicking the block Methods Description getCurrentXP() Returns an integer number that represents the stored xp points dumpXP() Dump all the stored xp","title":"XP Collector"}]}